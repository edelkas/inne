Eddy's TODO list for inne:

- ADD NEW COMMANDS TO HELP / README
- Restart process when it gets killed, maybe even restart it daily to prevent the memory leak.
- Distribution of scores: top20 episode distribution = first show some stats regarding top20s per episode (most top20s in an ep, least, average, etc), then a file with all episodes sorted by # of top20s). Parameters: type, rank (top20, 0th, etc), distribution type (by episodes, by rows, by tabs).
- CKC rankings, both normal (counting) and weighed by the number of cool kids in each board (obviously, with type and tab as parameters).
- Total coolness.
- Restrict display names to ASCII only
- For Archive scores function: Make sure to sort ties in descending order by using the replay id.
- Improve the migration of video challenges to the database: Parse the spreadsheet directly, otherwise it takes longer to update it and it doesn't work unless you have the csv files, which are not in the github repo.
- "nevermind": delete last inne message prompted by that user.
- Implement NReality's asterisk to previous 0th holders using the new Archives feature.
- Implement "index" (maybe "tally"): Outputs file with a list (like "list") of something, like all 0ths. With a parameter we specify what, for instance, 0th scores or 0th frames. With another parameter we specify the order, like the natural one, or by score in descending order...
- Compare local scores (nprofile) vs server scores to find differences, a la NReality Score Comparer.
- Player alias table (e.g. "asleep at the wheel" and "drunk driver" for MaelstroM")
- Level alias table (e.g. "cfl" for compendium for literates")
- Add total <rank> score, and show total score and total 19th score gained daily and weekly.

\\ ------------------------ Art ------------------------
- Use different objects for different colors.
- Create a custom palette that best fits the image.
- Dithering.

\\ ------------------------ Current ------------------------
- Improve help (add command list, add help menu for each command).

\\ ------------------------ Userlevels ------------------------

- Usernames are being truncated.
- We need to update all maps regularly, for the ++'s, etc.
- Userlevel of the day
- Unify names: Authors who have changed username, group by author id and change all names to the most recent one. BUT keep old names in the alias table.
- Add Metanet levels to the db.

Less priority:
- Missing
- Demo analysis.
- Userlevel rankings by page (featured, best, hardest, etc.). Also, the special hardest rankings with point ponderation.
- Imagesearch: Show pictures of results (miniature) instead of text.
- Userlevel stats: How many unique authors, maps, averages, etc. Break down by mode and total.
- When an ID is not in the database, if it's close (or always), download newest, but without printing it.
- Store a daily list of all top 50 userlevels (just ID's for instance), so we can see how the hardest levels evolve.
- When requiring an ID (download, screenshot, etc), we could also support a name, and then we perform a search in the database. If there's one result, we show it, otherwise, we show the list. (Note: When this is done, we'll have to update the way IDs are matched, since it's currently too general and could result in collisions).
- Map Steam ID's to player names by looking it up in the database, so that they can be used when searching the server / database.
- Browse user dependant categories
- Browse other (made up but interesting) categories
- Download maps (plural), like, all maps by an author or something.
- Add a command to the browse/search function, that formats level names with underscores instead of spaces, so that they can be readily copied and pasted to N++.
- Upload maps to accounts (need to figure out request by using proxy first)
- Map editor with slots for each user

Database:

- Change format of stored dates to be UNIX time, or something consistent.

Others:
- Filter results by any field.
- Add the possibility of making secondary orders (to break ties).

\\ ------------------------ Scores ------------------------

- Ping players who lost 0ths, using the previous function.

\\ ------------------------ Screenshots ------------------------

- Regular doors aren't being placed correctly, sometimes at least, see e.g. 42069, in which horizontal doors are shifted half a tile up, and vertical doos are shifted half a tile to the left. There have been more examples.

Default palettes:
- 2 votes for classic, 5 for vasquez, 5 for random
- Add an option to set default palette for each user
- Add a note when screenshots are published, that indicates the commands to specify the palette, so that new users know about it. Also, the command to set default palette.
- Add custom palettes, but not in the randomized
- Generate a gif with one palette per frame

\\ ------------------------ Total Scores ------------------------
- Create 2 tables: Levels and Episodes. One row per player, one column per level/episode. The idea is to keep the bot running 24/7, cycling through Steam ID's until an active one is found, and then latch onto that player and start downloading his scores. First, download those which have not yet been downloaded, and after that's done, keep downloading them, but not willy nilly, instead, also save the date at which each score was downloaded, and always update the scores in chronological order of last updated. Eventually, the goal is to have all scores by all players (in the list), and have them as updated as possible (even if they haven't completed the level).

\\ ------------------------ Replays ------------------------

- Generate attract files from Metanet level & userlevel replays, as a way to keep demos.
- Implement demo analysis to attract files, which requires to find a way for the bot to download files uploaded by people.

Analysis:

- Prettify format (aligment).
- Error checking before using Zlib, in case of erroneous download.
- Don't break the whole function if one download failed: retry, or skip to the next one.
- Compare inputs of two runs like github does, also maybe do this comparison by just specifying changes (*read below*)

\\ ------------------------ History ------------------------
-- Fix the doubling through code, by halving the older scores.
-- Add the possibility of limiting the scope of graphs (upper bound of y axis), using an additional parameters to the user command (e.g. "intro history 100"). In this case, if some player doesn't even appear in the graph because he's above it, maybe delete him from the legend and add new players. This adds an aditional difficulty since it's not just changing the y axis, but also changing the players to be plotted. To do so, the maximum would have to be computed first, and then decide which players are to be plotted.
-- Medium priority: Another solution for the above problem: Use logarithmic scale.
-- Manually join players that changed username (e.g. Maelstrom=drunk driver=asleep at the wheel=coronavirus).
-- Add some chronological marks in the x axis (at least years, if not months). Maybe more and better marks in the y axis too.
-- Retroactively delete (in the code, not the database) ignored players, like Mishu.
-- Medium priority: Figure out what causes the sudden drops in the graphs, and fix it.
-- Low priotity: Select the number of players to be plotted, or the minimum number of 0ths to select such players, using user input. This would have to be limited with some hardcoded constants to prevent spam or a computation overload).
-- Low priotity: Improve legend (align players and put on the side instead of top, maybe put maxes next to them).
-- Low priotity: Overall improvements to style (frame graph, and other decorations).

\\ ------------------------ Cheaters ------------------------


\\ ------------------------ Hardcore ------------------------

- Cleanliness, splits, and other functions.

\\ ------------------------ Humanlike features ------------------------

- Add guessing game: inne shows a picture of a level and people must figure out the level (by typing the name or level code). Maybe different difficulty settings, the easy one being a full picture and hard one being a section only, maybe ensuring that this section makes sense somehow (ie. it's not just empty space). Since we need to hold state, make sure you can run the game in a thread, with a limit of maybe 5 simultaneous games.
- Add some backstory, like what happens when outte is asked about inne (murder?)
- Add some more easter eggs, like a command that shows (or links) eddysipw.

Avatar:
- Ensure the random avatar can't repeat when faceswapping. In order to do so, we could save the current filename of the avatar in the GlobalProperties table of the database, and reject the current one before sampling the files in the avatar folder.
- Maybe also store the date of the avatar change to avoid the cooldown.

\\ ------------------------ General ------------------------
- Tie breaker for rankings: Average rank, instead of random.
- Add coop and race for some functions, like screenshots
- Maybe change "total score" to default to TLS instead of TLS + TES, which doesn't make much sense.
- SAVEFILE PARSER, ability to send inne your savefile and use it to elaborate completion leaderboards and whatnot (ask CCS if he ever finished it).
- Interesting: Analyze how do coop demos work. Then, to compare individual demos on the same level, download 2 of them and build an attrac file to run the replay in N++'s menu.
- Add help for each command, e.g., "help rankings".
* Customize "list" even further.
- 0th/Top20 changes (new ones, and per player).
- Comparison between players.
- Charts with colors.
- One should relate levels to their episodes with has_many and belongs_to => Rebuild database, maybe by creating more indices. We could use this to create a "cleanliness" and an "ownage?" method for episodes.
- Some methods are duplicated in messages and inne++ files, like 'send_screenshot' or 'send_diff', ¿what to do here, delete the one in inne++ (which is not being used)?

- Search Metanet levels by name (regex too?)
- Possibility to return lists in order of level and not rank.
- For "splits", also download episode 0th replay and parse it to get the actual 0th splits, so that we can compare the 0th splits with the ideal splits we are currently producing by adding up the level 0ths. This isn't actually possible unless we assume G++, which we can check by adding up.
- Implement "missing" in the "list" function, so that we could get "bottom 5 list for jirka that I don't already have".
- Unique 0th holders.
- 0th rankings ignoring certain players.
- Add relaxed episode ownages (without episode), and ownages with ties.


\\ ------------------------ Notes ------------------------

*below*

"holds jump for 1 less frame, switches right for 2 frames then left until end", or in oter words, "as long as the difference between two inputs is the same as in the previous frame, discard it, as you said"
